# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import API_pb2 as API__pb2


class APIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetObjectsDataRange = channel.unary_unary(
        '/api.API/GetObjectsDataRange',
        request_serializer=API__pb2.ObjectsDataRangeRequest.SerializeToString,
        response_deserializer=API__pb2.ObjectsDataRangeResponse.FromString,
        )
    self.GetObjectsDataStream = channel.unary_stream(
        '/api.API/GetObjectsDataStream',
        request_serializer=API__pb2.ObjectsDataStreamRequest.SerializeToString,
        response_deserializer=API__pb2.DataPoint.FromString,
        )
    self.GetObjectsState = channel.unary_unary(
        '/api.API/GetObjectsState',
        request_serializer=API__pb2.ObjectsStateRequest.SerializeToString,
        response_deserializer=API__pb2.ObjectsStateResponse.FromString,
        )
    self.GetObjectsEventsRange = channel.unary_unary(
        '/api.API/GetObjectsEventsRange',
        request_serializer=API__pb2.ObjectsEventsRangeRequest.SerializeToString,
        response_deserializer=API__pb2.ObjectsEventsRangeResponse.FromString,
        )
    self.GetObjectsEventsStream = channel.unary_stream(
        '/api.API/GetObjectsEventsStream',
        request_serializer=API__pb2.ObjectsEventsStreamRequest.SerializeToString,
        response_deserializer=API__pb2.ObjectsEventsStreamResponse.FromString,
        )
    self.GetObjectsInfo = channel.unary_unary(
        '/api.API/GetObjectsInfo',
        request_serializer=API__pb2.ObjectsInfoRequest.SerializeToString,
        response_deserializer=API__pb2.ObjectsInfoResponse.FromString,
        )
    self.GetModelUpdates = channel.unary_unary(
        '/api.API/GetModelUpdates',
        request_serializer=API__pb2.ModelUpdatesRequest.SerializeToString,
        response_deserializer=API__pb2.ModelUpdatesResponse.FromString,
        )


class APIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetObjectsDataRange(self, request, context):
    """получение телематических данных за период (необогащенные данные)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectsDataStream(self, request, context):
    """подписка на поток телематических данных устройства
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectsState(self, request, context):
    """получение обогащённого состояния устройств на момент времени (если время не указано - последнее известное состояние устройства)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectsEventsRange(self, request, context):
    """получение событий по устройству за период
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectsEventsStream(self, request, context):
    """подписка на поток событий по устройствам
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetObjectsInfo(self, request, context):
    """получение метаданных устройства
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetModelUpdates(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetObjectsDataRange': grpc.unary_unary_rpc_method_handler(
          servicer.GetObjectsDataRange,
          request_deserializer=API__pb2.ObjectsDataRangeRequest.FromString,
          response_serializer=API__pb2.ObjectsDataRangeResponse.SerializeToString,
      ),
      'GetObjectsDataStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetObjectsDataStream,
          request_deserializer=API__pb2.ObjectsDataStreamRequest.FromString,
          response_serializer=API__pb2.DataPoint.SerializeToString,
      ),
      'GetObjectsState': grpc.unary_unary_rpc_method_handler(
          servicer.GetObjectsState,
          request_deserializer=API__pb2.ObjectsStateRequest.FromString,
          response_serializer=API__pb2.ObjectsStateResponse.SerializeToString,
      ),
      'GetObjectsEventsRange': grpc.unary_unary_rpc_method_handler(
          servicer.GetObjectsEventsRange,
          request_deserializer=API__pb2.ObjectsEventsRangeRequest.FromString,
          response_serializer=API__pb2.ObjectsEventsRangeResponse.SerializeToString,
      ),
      'GetObjectsEventsStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetObjectsEventsStream,
          request_deserializer=API__pb2.ObjectsEventsStreamRequest.FromString,
          response_serializer=API__pb2.ObjectsEventsStreamResponse.SerializeToString,
      ),
      'GetObjectsInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetObjectsInfo,
          request_deserializer=API__pb2.ObjectsInfoRequest.FromString,
          response_serializer=API__pb2.ObjectsInfoResponse.SerializeToString,
      ),
      'GetModelUpdates': grpc.unary_unary_rpc_method_handler(
          servicer.GetModelUpdates,
          request_deserializer=API__pb2.ModelUpdatesRequest.FromString,
          response_serializer=API__pb2.ModelUpdatesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.API', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TagsDictionaryAPIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ResolveTag = channel.unary_unary(
        '/api.TagsDictionaryAPI/ResolveTag',
        request_serializer=API__pb2.ResolveTagRequest.SerializeToString,
        response_deserializer=API__pb2.ResolveTagResponse.FromString,
        )
    self.ResolveAllTagsMap = channel.unary_unary(
        '/api.TagsDictionaryAPI/ResolveAllTagsMap',
        request_serializer=API__pb2.ResolveAllTagsMapRequest.SerializeToString,
        response_deserializer=API__pb2.ResolveAllTagsMapResponse.FromString,
        )


class TagsDictionaryAPIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ResolveTag(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResolveAllTagsMap(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TagsDictionaryAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ResolveTag': grpc.unary_unary_rpc_method_handler(
          servicer.ResolveTag,
          request_deserializer=API__pb2.ResolveTagRequest.FromString,
          response_serializer=API__pb2.ResolveTagResponse.SerializeToString,
      ),
      'ResolveAllTagsMap': grpc.unary_unary_rpc_method_handler(
          servicer.ResolveAllTagsMap,
          request_deserializer=API__pb2.ResolveAllTagsMapRequest.FromString,
          response_serializer=API__pb2.ResolveAllTagsMapResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.TagsDictionaryAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
